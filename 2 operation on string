#include<stdio.h>
int length(char[]);
int match(char[], char[], int, int);
int compare(char[], char[]);
void main()
{
char str[100], pat[100], rep[100], t[100], d[100];
int ls, lp, lr;
int i, j, l, l1=0, k=0;
printf("\n Enter main String :");
gets(str);
printf("\n Enter pattern String :");
gets(pat);
printf("\n Enter Replace String :");
gets(rep);
ls = length(str);
lp = length(pat);
lr = length(rep);
if (ls < lp || !match(str, pat, ls, lp))
printf("\n Pattern Not found!!!!\n");
{
for (i=0;i<ls;i++) 
{
for(j=0; j<lp; j++)
t[j]=str[i+j]; 
t[j]='\0';
if (compare(t,pat)==0) 
{
k++; // count number of replaces
for(l=0;l<lr;l++)
d[l1++]=rep[l];
i=i+(lp-1);
}
else
d[l1++]=str[i];
}
d[l1]='\0'; 
printf("\n The number of string replaced =%d \n", k);
printf("\n Original String =%s \n", str);
printf("\n Pattern String =%s \n", pat);
printf("\n Replace String =%s \n", rep);
printf("\n String after replacement =%s \n", d);
}
}
int length(char str[])
{
int i, len =0;
for (i = 0; str[i] != '\0'; i++)
len++;
return len;
}
int compare(char str1[],char str2[])
{
int i=0;
while (str1[i] == str2[i] && str1[i] != '\0')
i++;
if (str1[i] > str2[i])
return 1;
else if (str1[i] < str2[i])
return -1;
else
return 0; 
}
int match(char text[], char pattern[], int ls, int lp)
{
int c, d, e;
for (c = 0; c <= ls - lp; c++) { e = c;
for (d = 0; d < lp; d++)
{
if (pattern[d] == text[e])
e++;
else
break;
}
if (d == lp)
return 1;
}
return 0; 
}
